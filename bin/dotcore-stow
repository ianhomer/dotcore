#!/usr/bin/env bash

SHOULD_RUN_ARGS=""

while getopts "f" o; do case "$o" in
  f) SHOULD_RUN_ARGS="${SHOULD_RUN_ARGS} -f" ;;
  v) VERBOSE="y" ;;
  esac done

should-run -z $SHOULD_RUN_ARGS $0 || exit 0
$(shim) && cd ${DOTCORE_DIR} && . bin/i.sh

DOTFILES_DIR=${DOTCORE_DIR}/dotfiles

log:: "stowing dotfiles"

cd ${DOTFILES_DIR}
for DIR in $(ls -d *); do
  log:: "... stowing $DIR"
  if should-run -ozs -b ${DIR%/} $SHOULD_RUN_ARGS ${0} "$DOTFILES_DIR/$DIR" -; then
    # --no-folding to get linking on a per file basis, vs on a directory level
    # this gives more fine grained control and does not bring files from other
    # processes into the git managed dotfiles. Any can be brought in explicitly
    # if needed by copying in.
    stow -v --no-folding --dotfiles -t $HOME $DIR
  elif [[ -n $VERBOSE ]]; then
    log:: "skipped stowing of $DIR"
  fi
done

should-run -fu $0
