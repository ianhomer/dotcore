#!/usr/bin/env bash
#
# Output shell script that can be sourced as a shim for the environment
#

set -e

DOTCORE_CONFIG=$HOME/.config/dotcore
LOCAL_SHIM=$DOT_CONFIG/.shim

if [[ $# -eq 0 ]] && [[ -f "$LOCAL_SHIM" ]]; then
  cat $LOCAL_SHIM
  exit 0
fi

help() {
  cat <<EOF
  -f force dynamic shim (not from cache)
  -h this help
  -i variables as ini file
  -o (termux|macos)
  -u update local shim cache
EOF
}

OPTIND=1
while getopts "fhio:u" o; do case "$o" in
  f) FORCE=y ;;
  h) help && exit 0 ;;
  i) INI=y ;;
  o) OS=$OPTARG ;;
  u) UPDATE=y ;;
  *) exit 1 ;;
  esac done
shift $((OPTIND - 1))

#
# Update local shim cache
#
if [[ "$UPDATE" = "y" ]]; then
  DOTCORE_BIN="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
  cd $DOTCORE_BIN
  . ./functions/log.sh
  mkdir -p $DOTCORE_CONFIG

  # Update .shim
  LOCAL_SHIM=$HOME/.config/dotcore/.shim
  if [[ -f "$LOCAL_SHIM" ]]; then
    CURRENT_SHIM=$(cat $LOCAL_SHIM)
  fi
  NEW_SHIM=$(shim -f)
  if [[ "${CURRENT_SHIM}" != "${NEW_SHIM}" ]]; then
    log:: "updating local shim"
    cat <<EOF >$LOCAL_SHIM
$NEW_SHIM
EOF
  fi
  exit 0
fi

if [[ "$FORCE" == "y" ]] || [[ ! -f "$LOCAL_SHIM" ]]; then
  #
  # Imply the OS value from the underlying OSTYPE
  #
  if [[ -z "$OS" ]]; then
    case $OSTYPE in
    linux-android)
      SHIM_OS="termux"
      ;;
    darwin*)
      SHIM_OS="macos"
      ;;
    *)
      SHIM_OS="$OSTYPE"
      ;;
    esac
  fi

  if [[ "$SHIM_OS" == "macos" ]]; then
    SHIM_SED="gsed"
    SHIM_STAT="gstat"
  else
    SHIM_SED="sed"
    SHIM_STAT="stat"
  fi

  if command -v dotcore &>/dev/null; then
    DOTCORE_BIN="$(cd "$(dirname $(command -v dotcore))" >/dev/null 2>&1 && pwd)"
  else
    DOTCORE_BIN="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
  fi

  DOTCORE_DIR="$(cd $DOTCORE_BIN/.. && pwd)"

  cat <<EOF
export DOTCORE_DIR=$DOTCORE_DIR
export DOTCORE_BIN=$DOTCORE_BIN
export DOTCORE_CONFIG=$DOTCORE_CONFIG
export SHIM_LOADED=1
export SHIM_OS=$SHIM_OS
export SHIM_SED=$SHIM_SED
export SHIM_STAT=$SHIM_STAT
EOF
else
  cat $LOCAL_SHIM
fi
